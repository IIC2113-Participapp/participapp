Este documento tiene por objetivo clarificar los métodos usados de los
controladores de devise.

class Devise::RegistrationsController < DeviseController

  # GET    /resource/sign_up(.:format)
  # - Genera y muestra el formulario de registro
  # Precondiciones: El usuarios hace click en register y espera respuesta
  # Postcondiciones: El usuario recibe el formulario de registro
  def new
  end

  # POST   /resource(.:format)
  # - Registra un usuario
  # Precondiciones: El usuario envía el formulario de registro
  # Postcondiciones: El usuario está creado en el modelo y existe en la base de datos
  def create
  end

  # GET    /resource/edit(.:format)
  # - Muestra el formulario para la edición de un usuario
  # Precondiciones: El usuarios hace click en el enlace para editar su perfil
  # Postcondiciones: El usuario recibe el formulario de edición de su perfil
  def edit
  end

  # PUT    /resource
  # - Modifica al usuario correspondiente
  # Precondiciones: El usuario envía el formulario de edición de su perfil
  # Postcondiciones: Los datos del usuario están actualizados en la base de datos.
  def update
  end

  # DELETE /resource(.:format)
  # - Elimina al usuario correspondiente
  # Precondiciones: El usuario hace click en eliminar, o un administrador decide eliminarlo
  # Postcondiciones: El usuario es destruido y eliminado de la base de datos
  end

end

class Devise::SessionsController < DeviseController

  # GET    /resource/sign_in(.:format)
  # - Muestra el formulario de ingreso
  # Precondiciones: El usuario hace click en iniciar sesión y espera respuesta
  # Postcondiciones: El usuario recibe el formulario de inicio de sesión
  def new
  end

  # POST   /resource/sign_in(.:format)
  # - Realiza login de un usuario
  # Precondiciones: El usuario envía el formulario de inicio de sesión
  # Postcondiciones: La sesión del usuario esta guardada
  def create
  end

  # DELETE /resource/sign_out(.:format)
  # - Cierra la sesión de un usuario
  # Precondiciones: El usuario hace click en el enlace para cerrar sesión
  # Postcondiciones: La sesión del usuario está cerrada
  def destroy
  end

end

class Devise::PasswordsController < DeviseController

  # GET    /resource/password/new
  # - Formulario de cambio de contraseña
  # Precondiciones: El usuario solicita cambiar su contraseña y espera respuesta
  # Postcondiciones: El usuario recibe el formulario de cambio de contraseña
  def new
  end

  # POST   /resource/password
  # - Cambia la contraseña
  # Precondiciones: El usuario envía el formulario de cambio de contraseña
  # Postcondiciones: La contraseña del usuario esta cambiada en la base de datos
  def create
  end

  # GET    /resource/password/edit?reset_password_token=abcdef
  # - Versión de cambio de contraseña mediante URL enviado al correo del usuario
  # Precondiciones: El usuario hace click en el enlace de su correo y espera respuesta
  # Postcondiciones: El usuario recibe el formulario de cambio de contraseña
  def edit
  end

  # PUT    /resource/password
  # - Cambia la contraseña, recibe el input de la versión URL del cambio de
  # contraseña
  # El usuario envía el formulario de cambio de contraseña
  # La contraseña del usuario está cambiada
  def update
  end

end

class Devise::ConfirmationsController < DeviseController

  # GET    /resource/confirmation/new
  # - Muestra mensaje de confirmación
  # Precondiciones: El usuario inicia sesión con una cuenta no activada
  # Postcondiciones: El usuario recibe un mensaje que le solicita confirmar su cuenta
  def new
  end

  # POST   /resource/confirmation
  # - Crea una solicitud de confirmación
  # Precondiciones: El usuario hace click en el enlace de confirmación
  # Postcondiciones: El usuario está confirmado
  def create
  end

  # GET    /resource/confirmation?confirmation_token=abcdef
  # - Recibe una solicitud de confirmación
  # Precondiciones: El usuario crea una cuenta o solicita que se le envie la activacion
  # Postcondiciones: el usuario recibe un link de confirmación
  def show
  end

end
